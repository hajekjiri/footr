"""
An ISO-8601 encoded date string.
"""
scalar Date

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
}

"""
A list of records.
"""
type RecordConnection {
  """
  A list of edges.
  """
  edges: [RecordEdge!]!

  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type RecordEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Record!
}

"""
A record contains a day and dishes that were eaten on that day.
"""
type Record {
  """
  The ID of the record.
  """
  id: ID!

  """
  What day this record is for.
  """
  day: Date!

  """
  A list of dishes for this record.
  """
  dishes: DishConnection!
}

"""
A list of dishes.
"""
type DishConnection {
  """
  A list of edges.
  """
  edges: [DishEdge!]!

  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type DishEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Dish!
}

"""
A dish contains its name, when it was last eaten and records that contain it.
"""
type Dish {
  """
  The ID of the dish.
  """
  id: ID!

  """
  The name of the dish.
  """
  name: String!

  """
  When the dish was last eaten.
  """
  lastEaten: Date

  """
  A list of records that contain the dish.
  """
  records: DishRecordConnection!
}

"""
A list of records that contain the parent dish.
"""
type DishRecordConnection {
  """
  A list of edges.
  """
  edges: [DishRecordEdge!]!

  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type DishRecordEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: DishRecord!
}

"""
A record that contains the parent dish.
"""
type DishRecord {
  """
  The ID of the record.
  """
  id: ID!

  """
  What day this record is for.
  """
  day: Date!
}

"""
An input type of Dish.
"""
input DishInput {
  """
  The name of the dish.
  """
  name: String!
}

"""
An input type for a record of an eaten dish.
"""
input RecordInput {
  """
  What day this record is for.
  """
  day: Date!

  """
  The ID of the eaten dish.
  """
  dishId: ID!
}

"""
The query root of Footr's GraphQL interface.
"""
type Query {
  """
  Look up a record by its ID or day.
  """
  record(
    """
    The ID of the record.
    """
    id: ID,

    """
    What day this record is for.
    """
    day: Date
  ): Record!

  """
  Return a list of records.
  """
  records(
    """
    Returns the first _n_ elements from the list.
    """
    first: Int,

    """
    Returns the last _n_ elements from the list.
    """
    last: Int,

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String,

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String
  ): RecordConnection!

  """
  Look up a dish by its ID or name.
  """
  dish(
    """
    The ID of the dish.
    """
    id: ID,

    """
    The name of the dish.
    """
    name: String
  ): Dish!

  """
  Return a list of dishes.
  """
  dishes(
    """
    Returns the first _n_ elements from the list.
    """
    first: Int,

    """
    Returns the last _n_ elements from the list.
    """
    last: Int,

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String,

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String
  ): DishConnection!
}

"""
The root query for implementing GraphQL mutations.
"""
type Mutation {
  """
  Add a new dish.
  """
  addDish(input: DishInput!): Dish!

  """
  Remove a dish by its ID or name along with its records.
  """
  removeDish(
  """
  The ID of the dish.
  """
  id: ID,

  """
  The name of the dish.
  """
  name: String
  ): Dish!

  """
  Add a record of an eaten dish.
  """
  addDishRecord(input: RecordInput!): Record!

  """
  Remove a record of an eaten dish.
  """
  removeDishRecord(input: RecordInput!): Record
}
